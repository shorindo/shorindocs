<xuml:xuml namespace="layout">
  <xuml:label key="license">
    <xuml:text lang="ja">Powered by shorindo.com</xuml:text>
    <xuml:text lang="en">Powered by shorindo.com</xuml:text>
  </xuml:label>
  <xuml:label key="recents">
    <xuml:text lang="ja">最近の更新</xuml:text>
    <xuml:text lang="en">Recent updates</xuml:text>
  </xuml:label>
  <xuml:label key="notice">
    <xuml:text lang="ja">お知らせ</xuml:text>
    <xuml:text lang="ja">Notice</xuml:text>
  </xuml:label>
  <xuml:label key="create">
    <xuml:text lang="ja">新規</xuml:text>
    <xuml:text lang="en">Create</xuml:text>
  </xuml:label>
  <xuml:label key="edit">
    <xuml:text lang="ja">編集</xuml:text>
    <xuml:text lang="en">Edit</xuml:text>
  </xuml:label>
  <xuml:label key="search">
    <xuml:text lang="ja">検索</xuml:text>
    <xuml:text lang="en">Search</xuml:text>
  </xuml:label>
  <xuml:label key="login">
    <xuml:text lang="ja">ログイン</xuml:text>
    <xuml:text lang="en">Login</xuml:text>
  </xuml:label>
  <xuml:label key="logout">
    <xuml:text lang="ja">ログアウト</xuml:text>
    <xuml:text lang="en">Logout</xuml:text>
  </xuml:label>

  <xuml:template name="expand">
    <!doctype html>
    <html>
      <head>
        <meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/>
        <title>${document.title}</title>
        <link rel="icon" type="image/x-icon" href="${favicon}">
        <link rel="stylesheet" type="text/css" media="all" href="@{/css/xuml.css}"/>
        <script type="text/javascript" src="@{/js/script.js}"></script>
      </head>
      <body class="xuml-width-fill xuml-height-fill">
        <div class="xuml-vbox">
          <div id="header-pane">
            <xuml:apply name="HEAD"/>
            <div style="float:right;">
              <xuml:switch value="${user.authenticated}">
                <xuml:case eq="true">
                  <a href="@{/logout}">#{logout}</a>
                </xuml:case>
                <xuml:default>
                  <a href="@{/login}?referer=/${document.documentId}">#{login}</a>
                </xuml:default>
              </xuml:switch>
            </div>
          </div>
          <div id="menubar" class="xuml-menubar noprint">
            <div class="xuml-menubar-left">
              <button id="docs-select" onclick="docs.select()">#{create}</button>
              <button id="docs-edit" onclick="docs.edit()">#{edit}</button>
              <button id="docs-preview">プレビュー</button>
              <button id="docs-save">一時保存</button>
              <button id="docs-commit">コミット</button>
              <button id="docs-cancel" onclick="location=location.pathname;">キャンセル</button>
            </div>
            <div class="xuml-menubar-right">
              <input type="text"/>
              <button>#{search}</button>
            </div>
          </div>
          <div id="main" class="xuml-hbox">
            <xuml:apply name="main"/>
          </div>
          <div id="footer-pane" class="noprint">#{license}</div>
        </div>
      </body>
    </html>
  </xuml:template>

  <xuml:template name="LCR">
    <xuml:apply name="expand">
      <xuml:template name="main">
        <div id="left-pane" class="xuml-vbox noprint" style="width:25%;overflow:auto;">
          <xuml:apply name="LEFT"/>
        </div>
        <div id="main-pane" class="xuml-vbox" flex="1" style="overflow:auto;padding:0 5px;">
          <xuml:apply name="CENTER"/>
        </div>
        <div id="right-pane" class="xuml-vbox noprint" style="width:25%;overflow:auto;">
          <xuml:apply name="RIGHT"/>
        </div>
      </xuml:template>
    </xuml:apply>
  </xuml:template>

  <xuml:template name="doctype-selector-dialog">
    <div id="doctype-selector-dialog" class="xuml-dialog-pane">
      <div class="xuml-dialog">
        <div class="xuml-dialog-head">新規ドキュメントの作成</div>
        <div class="xuml-dialog-body" style="vertical-align:middle;overflow-y:hidden;">
          ドキュメントの種類<br/>
          <select id="docType" name="docType" style="width:95%;height:25px;margin:1px 3px 10px 3px;">
          <option>選択してください</option>
          <xuml:each item="docType" value="${docTypes}">
            <option class="xuml-hover">${docType}</option>
          </xuml:each>
          </select>
          タイトル<br/>
          <input type="text" id="title" name="title" style="width:95%;height:25px;margin:1px 3px 10px 3px;" value="ドキュメント"/>
        </div>
        <div class="xuml-dialog-foot">
          <button id="okButton" style="width:100px;" disabled="true">OK</button>
          <button id="cancelButton" style="width:100px;">CANCEL</button>
        </div>
      </div>
    </div>
    <script type="text/javascript">
    <!--
    (function() {
      var $$ = function(locator) { return document.querySelector(locator); }
      var close = function() {
        var node = $$("#doctype-selector-dialog");
        node.parentNode.parentNode.removeChild(node.parentNode);
        window.onkeydown = null;
      };
      $$("#cancelButton").addEventListener("click", close);
      var handler = function(evt) {
        if (evt.keyCode == 27) {
            close();
        }
      };
      window.onkeydown = handler;

      var title = $$("#title");
      var select = $$("#docType");
      var okButton = $$("#okButton");
      var okctrl = function() {
        if (title.value && select.selectedIndex) {
          okButton.disabled = false;
        } else {
          okButton.disabled = true;
        }
      }
      okButton.addEventListener("click", function(evt) {
        docs.create(select.selectedOptions[0].value, title.value);
      });
      select.addEventListener("change", okctrl);
      title.addEventListener("change", okctrl);
    })();
    -->
    </script>
  </xuml:template>

  <xuml:template name="redirect">
    <script type="text/javascript">
      location = "@{/}${location}"; 
    </script>
  </xuml:template>

  <xuml:template name="LC">
    <xuml:apply name="expand">
      <xuml:template name="main">
        <div id="left-pane" class="xuml-vbox noprint" style="width:25%;">
          <xuml:apply name="LEFT"/>
        </div>
        <div id="main-pane" class="xuml-vbox" flex="1" style="overflow:auto;padding:0 5px;">
          <xuml:apply name="CENTER"/>
        </div>
      </xuml:template>
    </xuml:apply>
  </xuml:template>

  <xuml:template name="CR">
    <xuml:apply name="expand">
      <xuml:template name="main">
        <div id="main-pane" class="xuml-vbox noprint" flex="1" style="overflow:auto;padding:0 5px;">
          <xuml:apply name="CENTER"/>
        </div>
        <div id="right-pane" class="xuml-vbox" style="width:25%;">
          <xuml:apply name="RIGHT"/>
        </div>
      </xuml:template>
    </xuml:apply>
  </xuml:template>

  <xuml:template name="HEAD">
    <a href="@{/}"><img src="@{/img/docs-icon.png}"/></a>
    ${document.title}
  </xuml:template>

  <xuml:template name="LEFT">
    <div class="xuml-window">
      <div class="xuml-window-head">#{recents}</div>
      <div class="xuml-window-body" style="vertical-align:middle;overflow-y:hidden;">
      <xuml:each item="recent" value="&{recents(0, 20)}">
        <a class="xuml-window-item" href="${recent.documentId}">${recent.title}</a>
      </xuml:each>
      </div>
    </div>
    <div class="xuml-window">
      <div class="xuml-window-head">#{notice}</div>
      <div class="xuml-window-body" style="vertical-align:middle;overflow-y:hidden;">
      <xuml:each item="notice" value="&{notices()}">
        <div class="xuml-window-item">${notice}</div>
      </xuml:each>
      </div>
    </div>
  </xuml:template>

  <xuml:template name="CENTER">
    CENTER
  </xuml:template>

  <xuml:template name="RIGHT">
    RIGHT
  </xuml:template>
</xuml:xuml>

